#
# Welcome, if you're reading this!
#
#
#
# Print ROM Info
#
ui_print("---------------------------------------------");
ui_print(" -   Ported from: Samsung Galaxy S21 FE     -");
ui_print(" -   for devices: Samsung Galaxy A30/A40    -");
ui_print(" -   OS: OneUI6.1 based on Android 14 (U)   -");
ui_print(" -              Version: 3.0                -");
ui_print("---------------------------------------------");
ui_print(" ");
ui_print(" - Info: Installation can Take about 5-10min.-");
#
# Extract executable 
#
# Extract it
package_extract_dir("META-INF/scripts/bin", "/tmp/");
#
# Set permissions
set_metadata_recursive("/tmp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0777);
#
# Mounts
#
ui_print("@>Mount partition...");
ifelse(is_mounted("/system_root"), unmount("/system_root"));
ifelse(is_mounted("/vendor"), unmount("/vendor"));
ifelse(is_mounted("/product"), unmount("/product"));
#
# Installation
#
# If option 3 is selected at first
if file_getprop("/tmp/installer-tmp/install.prop", "selected") == "3" then
    #
    # Proceed to skip the ROM installation 
    ui_print(" Skipping ROM ...");
#
# Otherwise
else
    #
    # Print out status 
    ui_print(" Installing ROM ...");
    #
    # Print out status (install system) with time stamp (@)
    ui_print("@> Installing System Image ...");
    #
    # Set first progress
    set_progress(0.1);
    #
    # Install system image to system partition
    block_image_update("/dev/block/platform/13500000.dwmmc0/by-name/system", package_extract_file("xrom/system.transfer.list"), "xrom/system.new.dat.br", "xrom/system.patch.dat") ||
    #
    # Run busybox, to sleep for 1 second
    run_program("/tmp/busybox", "sleep", "1");
    #
    # Set final progress
    set_progress(0.75);
    #
    # Print out status (install vendor) with time stamp (@)
    ui_print("@> Installing Vendor Image ...");
    #
    # Install vendor image to vendor partition 
    block_image_update("/dev/block/platform/13500000.dwmmc0/by-name/vendor", package_extract_file("xrom/vendor.transfer.list"), "xrom/vendor.new.dat.br", "xrom/vendor.patch.dat") ||
    #
    # Run busybox, to sleep for 1 second
    run_program("/tmp/busybox", "sleep", "1");
    #
    # Print out status (install product) with time stamp (@)
    ui_print("@> Installing Product Image ...");
    #
    # Install product image to product partition 
    block_image_update("/dev/block/platform/13500000.dwmmc0/by-name/product", package_extract_file("xrom/product.transfer.list"), "xrom/product.new.dat.br", "xrom/product.patch.dat") ||
    #
    # Run busybox, to sleep for 1 second
    run_program("/tmp/busybox", "sleep", "1");
#
# End
endif;
#
# Resizer
#
set_progress(0.80);
# run_program("/tmp/busybox", "sh", "/tmp/system-resize.sh");
run_program("/tmp/busybox", "mount", "-t", "auto", "/system_root");
run_program("/tmp/busybox", "mount", "-t", "auto", "/vendor");
run_program("/tmp/busybox", "mount", "-t", "auto", "/product");
run_program("/tmp/busybox", "mount", "-o", "rw,remount", "/system_root");
run_program("/tmp/busybox", "mount", "-o", "rw,remount", "/vendor");
run_program("/tmp/busybox", "mount", "-o", "rw,remount", "/product");
#
# Device check
#
# Get the prop file from compat.prop. If it's A40, then
if file_getprop("/tmp/installer-tmp/compat.prop", "devid") == "a40" then
    #
    # Do the actions for A40, at this case, only A30 need to.
    ui_print("@> A40 detected.");
    ui_print("@>> Installing NamelessKernel");
    package_extract_file("device/a40/boot.img", "/dev/block/platform/13500000.dwmmc0/by-name/boot");
    package_extract_file("device/a40/dtb.img", "/dev/block/platform/13500000.dwmmc0/by-name/dtb");
    package_extract_file("device/a40/dtbo.img", "/dev/block/platform/13500000.dwmmc0/by-name/dtbo");
#
# End
endif;
# Get the prop file from compat.prop. If it's a30, then
if file_getprop("/tmp/installer-tmp/compat.prop", "devid") == "a30" then
    #
    # Do the actions for A30
    ui_print("@> A30 detected. Extracting required files...");
    package_extract_dir("device/a30/firmware", "/vendor/firmware");
    package_extract_dir("device/a30/lib/", "/vendor/lib/");
    package_extract_dir("device/a30/lib64/", "/vendor/lib64/");
    package_extract_dir("device/a30/bin", "/vendor/bin");
    package_extract_file("device/a30/hal/remosaic_daemon.rc", "/vendor/etc/init/remosaic_daemon.rc");
    set_metadata("/vendor/etc/init/remosaic_daemon.rc", "uid", 0, "gid", 0, "fmode", 0644, "selabel", "u:object_r:vendor_configs_file:s0");
    ui_print("@>> Installing NamelessKernel");
    package_extract_file("device/a30/boot.img", "/dev/block/platform/13500000.dwmmc0/by-name/boot");
    package_extract_file("device/a30/dtb.img", "/dev/block/platform/13500000.dwmmc0/by-name/dtb");
    package_extract_file("device/a30/dtbo.img", "/dev/block/platform/13500000.dwmmc0/by-name/dtbo");
#
# End
endif;
#
# Mods stuff
#
# Boot animation
# Default
if file_getprop("/tmp/installer-tmp/prefs.prop", "bootanim") == "default" then
    ui_print("@> Performing task: Install default boot animation");
    # Extract it
    package_extract_file("mods/bootanimation/S24/bootsamsungloop.qmg", "/system_root/system/media/bootsamsungloop.qmg");
    package_extract_file("mods/bootanimation/S24/bootsamsung.qmg", "/system_root/system/media/bootsamsung.qmg");
    package_extract_file("mods/bootanimation/S24/shutdown.qmg", "/system_root/system/media/shutdown.qmg");
endif;
#
# AT&T
if file_getprop("/tmp/installer-tmp/prefs.prop", "bootanim") == "att" then
    ui_print("@> Performing task: Install AT&T boot animation");
    # Extract it
    package_extract_file("mods/bootanimation/ATT/bootsamsungloop.qmg", "/system_root/system/media/bootsamsungloop.qmg");
    package_extract_file("mods/bootanimation/ATT/bootsamsung.qmg", "/system_root/system/media/bootsamsung.qmg");
    package_extract_file("mods/bootanimation/ATT/shutdown.qmg", "/system_root/system/media/shutdown.qmg");
endif;
#
# KTC
if file_getprop("/tmp/installer-tmp/prefs.prop", "bootanim") == "ktc" then
    ui_print("@> Performing task: Install KTC boot animation");
    # Extract it
    package_extract_file("mods/bootanimation/KTC/bootsamsungloop.qmg", "/system_root/system/media/bootsamsungloop.qmg");
    package_extract_file("mods/bootanimation/KTC/bootsamsung.qmg", "/system_root/system/media/bootsamsung.qmg");
    package_extract_file("mods/bootanimation/KTC/shutdown.qmg", "/system_root/system/media/shutdown.qmg");
endif;
#
# SKT
if file_getprop("/tmp/installer-tmp/prefs.prop", "bootanim") == "skt" then
    ui_print("@> Performing task: Install SKT boot animation");
    # Extract it
    package_extract_file("mods/bootanimation/SKT/bootsamsungloop.qmg", "/system_root/system/media/bootsamsungloop.qmg");
    package_extract_file("mods/bootanimation/SKT/bootsamsung.qmg", "/system_root/system/media/bootsamsung.qmg");
    package_extract_file("mods/bootanimation/SKT/shutdown.qmg", "/system_root/system/media/shutdown.qmg");
endif;
#
# Dual speaker
# Enable
if file_getprop("/tmp/installer-tmp/prefs.prop", "ds") == "yes" then
    ui_print("@> Performing task: Enable dual speaker");
    # Extract it
    package_extract_file("mods/dual/mixer_paths.xml", "/vendor/etc/mixer_paths.xml");
    package_extract_file("mods/dual/mixer_gains.xml", "/vendor/etc/mixer_gains.xml");
endif;
#
# Disable
if file_getprop("/tmp/installer-tmp/prefs.prop", "ds") == "no" then
    ui_print("@> Performing task: Disable dual speaker");
    # Extract it
    package_extract_file("mods/single/mixer_paths.xml", "/vendor/etc/mixer_paths.xml");
    package_extract_file("mods/single/mixer_gains.xml", "/vendor/etc/mixer_gains.xml");
endif;
#
# Blurry
#
# Disable
if file_getprop("/tmp/installer-tmp/prefs.prop", "ds") == "no" then
    ui_print("@> Performing task: Disable live blur");
    # Exec it
    run_program("/tmp/busybox", "sed", "-i", "s/<SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG>TRUE<\/SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG>/<SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG>FALSE<\/SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG>/g", "/system_root/system/etc/floating_feature.xml");
endif;
###########
# Debloat #
###########
ui_print(" ");
ui_print("@> Checking for selected debloat list...");
ui_print(" ");
#
# Dex
if file_getprop("/tmp/installer-tmp/bloat.prop", "dex") == "1" then
    ui_print("@> Debloating DeX");
    # Nuke it
    package_extract_file("debloat/dovf", "/tmp/nukeengine.sh");
    run_program("/tmp/busybox","sh","/tmp/nukeengine.sh");
endif;
#
# OCR
if file_getprop("/tmp/installer-tmp/bloat.prop", "ocr") == "1" then
    ui_print("@> Debloating OCR System");
    # Nuke it
    package_extract_file("debloat/ocr", "/tmp/nukeengine.sh");
    run_program("/tmp/busybox","sh","/tmp/nukeengine.sh");
endif;
#
# Quick Share
if file_getprop("/tmp/installer-tmp/bloat.prop", "qs") == "1" then
    ui_print("@> Debloating QuickShare");
    # Nuke it
    package_extract_file("debloat/quickshare", "/tmp/nukeengine.sh");
    run_program("/tmp/busybox","sh","/tmp/nukeengine.sh");
endif;
#
# Digital Wellbeing
if file_getprop("/tmp/installer-tmp/bloat.prop", "dw") == "1" then
    ui_print("@> Debloating Digital Wellbeing");
    # Nuke it
    package_extract_file("debloat/wellbeing", "/tmp/nukeengine.sh");
    run_program("/tmp/busybox","sh","/tmp/nukeengine.sh");
endif;
#
# NFC
if file_getprop("/tmp/installer-tmp/bloat.prop", "nfc") == "1" then
    ui_print("@> Debloating NFC");
    # Nuke it
    package_extract_file("debloat/nfc", "/tmp/nukeengine.sh");
    run_program("/tmp/busybox","sh","/tmp/nukeengine.sh");
endif;
#
# Game Optimization Service
if file_getprop("/tmp/installer-tmp/bloat.prop", "gos") == "1" then
    ui_print("@> Debloating Game optimization service");
    # Nuke it
    package_extract_file("debloat/game", "/tmp/nukeengine.sh");
    run_program("/tmp/busybox","sh","/tmp/nukeengine.sh");
endif;
#
# Weather
if file_getprop("/tmp/installer-tmp/bloat.prop", "weather") == "1" then
    ui_print("@> Debloating Weather app");
    # Nuke it
    package_extract_file("debloat/weather", "/tmp/nukeengine.sh");
    run_program("/tmp/busybox","sh","/tmp/nukeengine.sh");
endif;
#
# FSTrim
#
set_progress(0.96);
run_program("/tmp/busybox", "sleep", "1");
    run_program("/tmp/busybox", "fstrim", "-v", "/system_root");
    run_program("/tmp/busybox", "fstrim", "-v", "/data");
run_program("/tmp/busybox", "sleep", "1");
#
# Unmount
#
set_progress(0.99);
ui_print("@> Unmounting partitions");
ifelse(is_mounted("/system_root"), unmount("/system_root"));
ifelse(is_mounted("/vendor"), unmount("/vendor"));
ifelse(is_mounted("/product"), unmount("/product"));
#
# All done!
# ROM installation is complete, this is your goodbye message.
# Here's to a smooth reboot and a fresh new system!
# I hope you won't encounter any bootloops.
# If you do, don't hesitate to check online resources or reach out to the XRom group for help.
#
ui_print(" ");
ui_print(" ");
ui_print("ROM installation is complete");
ui_print("Here's to a smooth reboot and a fresh new system!");
ui_print("I hope you won't encounter any bootloops.");
ui_print("If you do, don't hesitate to check online resources or reach out to the XRom group for help.");
set_progress(1.00);
